/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.model;

import java.util.Objects;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Instructions from Dockerfile.   - DIRECTIVE_UNSPECIFIED: Default value for unsupported/missing directive.  - MAINTAINER: https://docs.docker.com/engine/reference/builder/  - RUN: https://docs.docker.com/engine/reference/builder/  - CMD: https://docs.docker.com/engine/reference/builder/  - LABEL: https://docs.docker.com/engine/reference/builder/  - EXPOSE: https://docs.docker.com/engine/reference/builder/  - ENV: https://docs.docker.com/engine/reference/builder/  - ADD: https://docs.docker.com/engine/reference/builder/  - COPY: https://docs.docker.com/engine/reference/builder/  - ENTRYPOINT: https://docs.docker.com/engine/reference/builder/  - VOLUME: https://docs.docker.com/engine/reference/builder/  - USER: https://docs.docker.com/engine/reference/builder/  - WORKDIR: https://docs.docker.com/engine/reference/builder/  - ARG: https://docs.docker.com/engine/reference/builder/  - ONBUILD: https://docs.docker.com/engine/reference/builder/  - STOPSIGNAL: https://docs.docker.com/engine/reference/builder/  - HEALTHCHECK: https://docs.docker.com/engine/reference/builder/  - SHELL: https://docs.docker.com/engine/reference/builder/
 */
@JsonAdapter(LayerDirective.Adapter.class)
public enum LayerDirective {
  DIRECTIVE_UNSPECIFIED("DIRECTIVE_UNSPECIFIED"),
  MAINTAINER("MAINTAINER"),
  RUN("RUN"),
  CMD("CMD"),
  LABEL("LABEL"),
  EXPOSE("EXPOSE"),
  ENV("ENV"),
  ADD("ADD"),
  COPY("COPY"),
  ENTRYPOINT("ENTRYPOINT"),
  VOLUME("VOLUME"),
  USER("USER"),
  WORKDIR("WORKDIR"),
  ARG("ARG"),
  ONBUILD("ONBUILD"),
  STOPSIGNAL("STOPSIGNAL"),
  HEALTHCHECK("HEALTHCHECK"),
  SHELL("SHELL");

  private String value;

  LayerDirective(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static LayerDirective fromValue(String text) {
    for (LayerDirective b : LayerDirective.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<LayerDirective> {
    @Override
    public void write(final JsonWriter jsonWriter, final LayerDirective enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public LayerDirective read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return LayerDirective.fromValue(String.valueOf(value));
    }
  }
}
