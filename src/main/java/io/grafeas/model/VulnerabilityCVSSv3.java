/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.grafeas.model.CVSSv3AttackComplexity;
import io.grafeas.model.CVSSv3AttackVector;
import io.grafeas.model.CVSSv3Impact;
import io.grafeas.model.CVSSv3PrivilegesRequired;
import io.grafeas.model.CVSSv3Scope;
import io.grafeas.model.CVSSv3UserInteraction;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * VulnerabilityCVSSv3
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T11:45:09.912-07:00[America/Los_Angeles]")public class VulnerabilityCVSSv3 {

  @SerializedName("base_score")
  private Float baseScore = null;

  @SerializedName("exploitability_score")
  private Float exploitabilityScore = null;

  @SerializedName("impact_score")
  private Float impactScore = null;

  @SerializedName("attack_vector")
  private CVSSv3AttackVector attackVector = null;

  @SerializedName("attack_complexity")
  private CVSSv3AttackComplexity attackComplexity = null;

  @SerializedName("privileges_required")
  private CVSSv3PrivilegesRequired privilegesRequired = null;

  @SerializedName("user_interaction")
  private CVSSv3UserInteraction userInteraction = null;

  @SerializedName("scope")
  private CVSSv3Scope scope = null;

  @SerializedName("confidentiality_impact")
  private CVSSv3Impact confidentialityImpact = null;

  @SerializedName("integrity_impact")
  private CVSSv3Impact integrityImpact = null;

  @SerializedName("availability_impact")
  private CVSSv3Impact availabilityImpact = null;
  public VulnerabilityCVSSv3 baseScore(Float baseScore) {
    this.baseScore = baseScore;
    return this;
  }

  

  /**
  * The base score is a function of the base metric scores.
  * @return baseScore
  **/
  @Schema(description = "The base score is a function of the base metric scores.")
  public Float getBaseScore() {
    return baseScore;
  }
  public void setBaseScore(Float baseScore) {
    this.baseScore = baseScore;
  }
  public VulnerabilityCVSSv3 exploitabilityScore(Float exploitabilityScore) {
    this.exploitabilityScore = exploitabilityScore;
    return this;
  }

  

  /**
  * Get exploitabilityScore
  * @return exploitabilityScore
  **/
  @Schema(description = "")
  public Float getExploitabilityScore() {
    return exploitabilityScore;
  }
  public void setExploitabilityScore(Float exploitabilityScore) {
    this.exploitabilityScore = exploitabilityScore;
  }
  public VulnerabilityCVSSv3 impactScore(Float impactScore) {
    this.impactScore = impactScore;
    return this;
  }

  

  /**
  * Get impactScore
  * @return impactScore
  **/
  @Schema(description = "")
  public Float getImpactScore() {
    return impactScore;
  }
  public void setImpactScore(Float impactScore) {
    this.impactScore = impactScore;
  }
  public VulnerabilityCVSSv3 attackVector(CVSSv3AttackVector attackVector) {
    this.attackVector = attackVector;
    return this;
  }

  

  /**
  * Get attackVector
  * @return attackVector
  **/
  @Schema(description = "")
  public CVSSv3AttackVector getAttackVector() {
    return attackVector;
  }
  public void setAttackVector(CVSSv3AttackVector attackVector) {
    this.attackVector = attackVector;
  }
  public VulnerabilityCVSSv3 attackComplexity(CVSSv3AttackComplexity attackComplexity) {
    this.attackComplexity = attackComplexity;
    return this;
  }

  

  /**
  * Get attackComplexity
  * @return attackComplexity
  **/
  @Schema(description = "")
  public CVSSv3AttackComplexity getAttackComplexity() {
    return attackComplexity;
  }
  public void setAttackComplexity(CVSSv3AttackComplexity attackComplexity) {
    this.attackComplexity = attackComplexity;
  }
  public VulnerabilityCVSSv3 privilegesRequired(CVSSv3PrivilegesRequired privilegesRequired) {
    this.privilegesRequired = privilegesRequired;
    return this;
  }

  

  /**
  * Get privilegesRequired
  * @return privilegesRequired
  **/
  @Schema(description = "")
  public CVSSv3PrivilegesRequired getPrivilegesRequired() {
    return privilegesRequired;
  }
  public void setPrivilegesRequired(CVSSv3PrivilegesRequired privilegesRequired) {
    this.privilegesRequired = privilegesRequired;
  }
  public VulnerabilityCVSSv3 userInteraction(CVSSv3UserInteraction userInteraction) {
    this.userInteraction = userInteraction;
    return this;
  }

  

  /**
  * Get userInteraction
  * @return userInteraction
  **/
  @Schema(description = "")
  public CVSSv3UserInteraction getUserInteraction() {
    return userInteraction;
  }
  public void setUserInteraction(CVSSv3UserInteraction userInteraction) {
    this.userInteraction = userInteraction;
  }
  public VulnerabilityCVSSv3 scope(CVSSv3Scope scope) {
    this.scope = scope;
    return this;
  }

  

  /**
  * Get scope
  * @return scope
  **/
  @Schema(description = "")
  public CVSSv3Scope getScope() {
    return scope;
  }
  public void setScope(CVSSv3Scope scope) {
    this.scope = scope;
  }
  public VulnerabilityCVSSv3 confidentialityImpact(CVSSv3Impact confidentialityImpact) {
    this.confidentialityImpact = confidentialityImpact;
    return this;
  }

  

  /**
  * Get confidentialityImpact
  * @return confidentialityImpact
  **/
  @Schema(description = "")
  public CVSSv3Impact getConfidentialityImpact() {
    return confidentialityImpact;
  }
  public void setConfidentialityImpact(CVSSv3Impact confidentialityImpact) {
    this.confidentialityImpact = confidentialityImpact;
  }
  public VulnerabilityCVSSv3 integrityImpact(CVSSv3Impact integrityImpact) {
    this.integrityImpact = integrityImpact;
    return this;
  }

  

  /**
  * Get integrityImpact
  * @return integrityImpact
  **/
  @Schema(description = "")
  public CVSSv3Impact getIntegrityImpact() {
    return integrityImpact;
  }
  public void setIntegrityImpact(CVSSv3Impact integrityImpact) {
    this.integrityImpact = integrityImpact;
  }
  public VulnerabilityCVSSv3 availabilityImpact(CVSSv3Impact availabilityImpact) {
    this.availabilityImpact = availabilityImpact;
    return this;
  }

  

  /**
  * Get availabilityImpact
  * @return availabilityImpact
  **/
  @Schema(description = "")
  public CVSSv3Impact getAvailabilityImpact() {
    return availabilityImpact;
  }
  public void setAvailabilityImpact(CVSSv3Impact availabilityImpact) {
    this.availabilityImpact = availabilityImpact;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityCVSSv3 vulnerabilityCVSSv3 = (VulnerabilityCVSSv3) o;
    return Objects.equals(this.baseScore, vulnerabilityCVSSv3.baseScore) &&
        Objects.equals(this.exploitabilityScore, vulnerabilityCVSSv3.exploitabilityScore) &&
        Objects.equals(this.impactScore, vulnerabilityCVSSv3.impactScore) &&
        Objects.equals(this.attackVector, vulnerabilityCVSSv3.attackVector) &&
        Objects.equals(this.attackComplexity, vulnerabilityCVSSv3.attackComplexity) &&
        Objects.equals(this.privilegesRequired, vulnerabilityCVSSv3.privilegesRequired) &&
        Objects.equals(this.userInteraction, vulnerabilityCVSSv3.userInteraction) &&
        Objects.equals(this.scope, vulnerabilityCVSSv3.scope) &&
        Objects.equals(this.confidentialityImpact, vulnerabilityCVSSv3.confidentialityImpact) &&
        Objects.equals(this.integrityImpact, vulnerabilityCVSSv3.integrityImpact) &&
        Objects.equals(this.availabilityImpact, vulnerabilityCVSSv3.availabilityImpact);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(baseScore, exploitabilityScore, impactScore, attackVector, attackComplexity, privilegesRequired, userInteraction, scope, confidentialityImpact, integrityImpact, availabilityImpact);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityCVSSv3 {\n");
    
    sb.append("    baseScore: ").append(toIndentedString(baseScore)).append("\n");
    sb.append("    exploitabilityScore: ").append(toIndentedString(exploitabilityScore)).append("\n");
    sb.append("    impactScore: ").append(toIndentedString(impactScore)).append("\n");
    sb.append("    attackVector: ").append(toIndentedString(attackVector)).append("\n");
    sb.append("    attackComplexity: ").append(toIndentedString(attackComplexity)).append("\n");
    sb.append("    privilegesRequired: ").append(toIndentedString(privilegesRequired)).append("\n");
    sb.append("    userInteraction: ").append(toIndentedString(userInteraction)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    confidentialityImpact: ").append(toIndentedString(confidentialityImpact)).append("\n");
    sb.append("    integrityImpact: ").append(toIndentedString(integrityImpact)).append("\n");
    sb.append("    availabilityImpact: ").append(toIndentedString(availabilityImpact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
