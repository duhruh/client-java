/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.grafeas.model.PackageVersion;
import io.grafeas.model.VulnerabilityVulnerabilityLocation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * VulnerabilityDetail
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T11:00:24.051-07:00[America/Los_Angeles]")public class VulnerabilityDetail {

  @SerializedName("cpe_uri")
  private String cpeUri = null;

  @SerializedName("package")
  private String _package = null;

  @SerializedName("min_affected_version")
  private PackageVersion minAffectedVersion = null;

  @SerializedName("max_affected_version")
  private PackageVersion maxAffectedVersion = null;

  @SerializedName("severity_name")
  private String severityName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("fixed_location")
  private VulnerabilityVulnerabilityLocation fixedLocation = null;

  @SerializedName("package_type")
  private String packageType = null;

  @SerializedName("is_obsolete")
  private Boolean isObsolete = null;
  public VulnerabilityDetail cpeUri(String cpeUri) {
    this.cpeUri = cpeUri;
    return this;
  }

  

  /**
  * Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.
  * @return cpeUri
  **/
  @Schema(description = "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.")
  public String getCpeUri() {
    return cpeUri;
  }
  public void setCpeUri(String cpeUri) {
    this.cpeUri = cpeUri;
  }
  public VulnerabilityDetail _package(String _package) {
    this._package = _package;
    return this;
  }

  

  /**
  * Required. The name of the package where the vulnerability was found.
  * @return _package
  **/
  @Schema(description = "Required. The name of the package where the vulnerability was found.")
  public String getPackage() {
    return _package;
  }
  public void setPackage(String _package) {
    this._package = _package;
  }
  public VulnerabilityDetail minAffectedVersion(PackageVersion minAffectedVersion) {
    this.minAffectedVersion = minAffectedVersion;
    return this;
  }

  

  /**
  * Get minAffectedVersion
  * @return minAffectedVersion
  **/
  @Schema(description = "")
  public PackageVersion getMinAffectedVersion() {
    return minAffectedVersion;
  }
  public void setMinAffectedVersion(PackageVersion minAffectedVersion) {
    this.minAffectedVersion = minAffectedVersion;
  }
  public VulnerabilityDetail maxAffectedVersion(PackageVersion maxAffectedVersion) {
    this.maxAffectedVersion = maxAffectedVersion;
    return this;
  }

  

  /**
  * Get maxAffectedVersion
  * @return maxAffectedVersion
  **/
  @Schema(description = "")
  public PackageVersion getMaxAffectedVersion() {
    return maxAffectedVersion;
  }
  public void setMaxAffectedVersion(PackageVersion maxAffectedVersion) {
    this.maxAffectedVersion = maxAffectedVersion;
  }
  public VulnerabilityDetail severityName(String severityName) {
    this.severityName = severityName;
    return this;
  }

  

  /**
  * The severity (eg: distro assigned severity) for this vulnerability.
  * @return severityName
  **/
  @Schema(description = "The severity (eg: distro assigned severity) for this vulnerability.")
  public String getSeverityName() {
    return severityName;
  }
  public void setSeverityName(String severityName) {
    this.severityName = severityName;
  }
  public VulnerabilityDetail description(String description) {
    this.description = description;
    return this;
  }

  

  /**
  * A vendor-specific description of this note.
  * @return description
  **/
  @Schema(description = "A vendor-specific description of this note.")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  public VulnerabilityDetail fixedLocation(VulnerabilityVulnerabilityLocation fixedLocation) {
    this.fixedLocation = fixedLocation;
    return this;
  }

  

  /**
  * Get fixedLocation
  * @return fixedLocation
  **/
  @Schema(description = "")
  public VulnerabilityVulnerabilityLocation getFixedLocation() {
    return fixedLocation;
  }
  public void setFixedLocation(VulnerabilityVulnerabilityLocation fixedLocation) {
    this.fixedLocation = fixedLocation;
  }
  public VulnerabilityDetail packageType(String packageType) {
    this.packageType = packageType;
    return this;
  }

  

  /**
  * The type of package; whether native or non native(ruby gems, node.js packages etc).
  * @return packageType
  **/
  @Schema(description = "The type of package; whether native or non native(ruby gems, node.js packages etc).")
  public String getPackageType() {
    return packageType;
  }
  public void setPackageType(String packageType) {
    this.packageType = packageType;
  }
  public VulnerabilityDetail isObsolete(Boolean isObsolete) {
    this.isObsolete = isObsolete;
    return this;
  }

  

  /**
  * Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
  * @return isObsolete
  **/
  @Schema(description = "Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.")
  public Boolean isIsObsolete() {
    return isObsolete;
  }
  public void setIsObsolete(Boolean isObsolete) {
    this.isObsolete = isObsolete;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityDetail vulnerabilityDetail = (VulnerabilityDetail) o;
    return Objects.equals(this.cpeUri, vulnerabilityDetail.cpeUri) &&
        Objects.equals(this._package, vulnerabilityDetail._package) &&
        Objects.equals(this.minAffectedVersion, vulnerabilityDetail.minAffectedVersion) &&
        Objects.equals(this.maxAffectedVersion, vulnerabilityDetail.maxAffectedVersion) &&
        Objects.equals(this.severityName, vulnerabilityDetail.severityName) &&
        Objects.equals(this.description, vulnerabilityDetail.description) &&
        Objects.equals(this.fixedLocation, vulnerabilityDetail.fixedLocation) &&
        Objects.equals(this.packageType, vulnerabilityDetail.packageType) &&
        Objects.equals(this.isObsolete, vulnerabilityDetail.isObsolete);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(cpeUri, _package, minAffectedVersion, maxAffectedVersion, severityName, description, fixedLocation, packageType, isObsolete);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityDetail {\n");
    
    sb.append("    cpeUri: ").append(toIndentedString(cpeUri)).append("\n");
    sb.append("    _package: ").append(toIndentedString(_package)).append("\n");
    sb.append("    minAffectedVersion: ").append(toIndentedString(minAffectedVersion)).append("\n");
    sb.append("    maxAffectedVersion: ").append(toIndentedString(maxAffectedVersion)).append("\n");
    sb.append("    severityName: ").append(toIndentedString(severityName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fixedLocation: ").append(toIndentedString(fixedLocation)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    isObsolete: ").append(toIndentedString(isObsolete)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
