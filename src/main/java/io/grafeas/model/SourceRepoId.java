/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.grafeas.model.SourceProjectRepoId;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;

/**
 * A unique identifier for a Cloud Repo.
 */
@Schema(description = "A unique identifier for a Cloud Repo.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-05-14T11:45:09.912-07:00[America/Los_Angeles]")public class SourceRepoId {

  @SerializedName("project_repo_id")
  private SourceProjectRepoId projectRepoId = null;

  @SerializedName("uid")
  private String uid = null;
  public SourceRepoId projectRepoId(SourceProjectRepoId projectRepoId) {
    this.projectRepoId = projectRepoId;
    return this;
  }

  

  /**
  * Get projectRepoId
  * @return projectRepoId
  **/
  @Schema(description = "")
  public SourceProjectRepoId getProjectRepoId() {
    return projectRepoId;
  }
  public void setProjectRepoId(SourceProjectRepoId projectRepoId) {
    this.projectRepoId = projectRepoId;
  }
  public SourceRepoId uid(String uid) {
    this.uid = uid;
    return this;
  }

  

  /**
  * A server-assigned, globally unique identifier.
  * @return uid
  **/
  @Schema(description = "A server-assigned, globally unique identifier.")
  public String getUid() {
    return uid;
  }
  public void setUid(String uid) {
    this.uid = uid;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceRepoId sourceRepoId = (SourceRepoId) o;
    return Objects.equals(this.projectRepoId, sourceRepoId.projectRepoId) &&
        Objects.equals(this.uid, sourceRepoId.uid);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(projectRepoId, uid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceRepoId {\n");
    
    sb.append("    projectRepoId: ").append(toIndentedString(projectRepoId)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
