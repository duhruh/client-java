/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.model;

import java.util.Objects;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Kind represents the kinds of notes supported.   - NOTE_KIND_UNSPECIFIED: Unknown.  - VULNERABILITY: The note and occurrence represent a package vulnerability.  - BUILD: The note and occurrence assert build provenance.  - IMAGE: This represents an image basis relationship.  - PACKAGE: This represents a package installed via a package manager.  - DEPLOYMENT: The note and occurrence track deployment events.  - DISCOVERY: The note and occurrence track the initial discovery status of a resource.  - ATTESTATION: This represents a logical \&quot;role\&quot; that can attest to artifacts.
 */
@JsonAdapter(V1beta1NoteKind.Adapter.class)
public enum V1beta1NoteKind {
  NOTE_KIND_UNSPECIFIED("NOTE_KIND_UNSPECIFIED"),
  VULNERABILITY("VULNERABILITY"),
  BUILD("BUILD"),
  IMAGE("IMAGE"),
  PACKAGE("PACKAGE"),
  DEPLOYMENT("DEPLOYMENT"),
  DISCOVERY("DISCOVERY"),
  ATTESTATION("ATTESTATION");

  private String value;

  V1beta1NoteKind(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static V1beta1NoteKind fromValue(String text) {
    for (V1beta1NoteKind b : V1beta1NoteKind.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<V1beta1NoteKind> {
    @Override
    public void write(final JsonWriter jsonWriter, final V1beta1NoteKind enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public V1beta1NoteKind read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return V1beta1NoteKind.fromValue(String.valueOf(value));
    }
  }
}
