/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.model;

import java.util.Objects;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Analysis status for a resource. Currently for initial analysis only (not updated in continuous analysis).   - ANALYSIS_STATUS_UNSPECIFIED: Unknown.  - PENDING: Resource is known but no action has been taken yet.  - SCANNING: Resource is being analyzed.  - FINISHED_SUCCESS: Analysis has finished successfully.  - FINISHED_FAILED: Analysis has finished unsuccessfully, the analysis itself is in a bad state.  - FINISHED_UNSUPPORTED: The resource is known not to be supported
 */
@JsonAdapter(DiscoveredAnalysisStatus.Adapter.class)
public enum DiscoveredAnalysisStatus {
  ANALYSIS_STATUS_UNSPECIFIED("ANALYSIS_STATUS_UNSPECIFIED"),
  PENDING("PENDING"),
  SCANNING("SCANNING"),
  FINISHED_SUCCESS("FINISHED_SUCCESS"),
  FINISHED_FAILED("FINISHED_FAILED"),
  FINISHED_UNSUPPORTED("FINISHED_UNSUPPORTED");

  private String value;

  DiscoveredAnalysisStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DiscoveredAnalysisStatus fromValue(String text) {
    for (DiscoveredAnalysisStatus b : DiscoveredAnalysisStatus.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<DiscoveredAnalysisStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final DiscoveredAnalysisStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DiscoveredAnalysisStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return DiscoveredAnalysisStatus.fromValue(String.valueOf(value));
    }
  }
}
