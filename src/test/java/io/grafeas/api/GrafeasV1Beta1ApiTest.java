/*
 * proto/v1beta1/grafeas.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.grafeas.api;

import io.grafeas.ApiException;
import io.grafeas.model.V1beta1BatchCreateNotesRequest;
import io.grafeas.model.V1beta1BatchCreateNotesResponse;
import io.grafeas.model.V1beta1BatchCreateOccurrencesRequest;
import io.grafeas.model.V1beta1BatchCreateOccurrencesResponse;
import io.grafeas.model.V1beta1ListNoteOccurrencesResponse;
import io.grafeas.model.V1beta1ListNotesResponse;
import io.grafeas.model.V1beta1ListOccurrencesResponse;
import io.grafeas.model.V1beta1Note;
import io.grafeas.model.V1beta1Occurrence;
import io.grafeas.model.V1beta1VulnerabilityOccurrencesSummary;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GrafeasV1Beta1Api
 */
@Ignore
public class GrafeasV1Beta1ApiTest {

    private final GrafeasV1Beta1Api api = new GrafeasV1Beta1Api();

    /**
     * Creates new notes in batch.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void batchCreateNotesTest() throws ApiException {
        V1beta1BatchCreateNotesRequest body = null;
        String parent = null;
        V1beta1BatchCreateNotesResponse response = api.batchCreateNotes(body, parent);

        // TODO: test validations
    }
    /**
     * Creates new occurrences in batch.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void batchCreateOccurrencesTest() throws ApiException {
        V1beta1BatchCreateOccurrencesRequest body = null;
        String parent = null;
        V1beta1BatchCreateOccurrencesResponse response = api.batchCreateOccurrences(body, parent);

        // TODO: test validations
    }
    /**
     * Creates a new note.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNoteTest() throws ApiException {
        V1beta1Note body = null;
        String parent = null;
        V1beta1Note response = api.createNote(body, parent);

        // TODO: test validations
    }
    /**
     * Creates a new occurrence.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOccurrenceTest() throws ApiException {
        V1beta1Occurrence body = null;
        String parent = null;
        V1beta1Occurrence response = api.createOccurrence(body, parent);

        // TODO: test validations
    }
    /**
     * Deletes the specified note.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNoteTest() throws ApiException {
        String name = null;
        Object response = api.deleteNote(name);

        // TODO: test validations
    }
    /**
     * Deletes the specified occurrence. For example, use this method to delete an occurrence when the occurrence is no longer applicable for the given resource.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOccurrenceTest() throws ApiException {
        String name = null;
        Object response = api.deleteOccurrence(name);

        // TODO: test validations
    }
    /**
     * Gets the specified note.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNoteTest() throws ApiException {
        String name = null;
        V1beta1Note response = api.getNote(name);

        // TODO: test validations
    }
    /**
     * Gets the specified occurrence.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOccurrenceTest() throws ApiException {
        String name = null;
        V1beta1Occurrence response = api.getOccurrence(name);

        // TODO: test validations
    }
    /**
     * Gets the note attached to the specified occurrence. Consumer projects can use this method to get a note that belongs to a provider project.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getOccurrenceNoteTest() throws ApiException {
        String name = null;
        V1beta1Note response = api.getOccurrenceNote(name);

        // TODO: test validations
    }
    /**
     * Gets a summary of the number and severity of occurrences.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVulnerabilityOccurrencesSummaryTest() throws ApiException {
        String parent = null;
        String filter = null;
        V1beta1VulnerabilityOccurrencesSummary response = api.getVulnerabilityOccurrencesSummary(parent, filter);

        // TODO: test validations
    }
    /**
     * Lists occurrences referencing the specified note. Provider projects can use this method to get all occurrences across consumer projects referencing the specified note.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNoteOccurrencesTest() throws ApiException {
        String name = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        V1beta1ListNoteOccurrencesResponse response = api.listNoteOccurrences(name, filter, pageSize, pageToken);

        // TODO: test validations
    }
    /**
     * Lists notes for the specified project.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotesTest() throws ApiException {
        String parent = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        V1beta1ListNotesResponse response = api.listNotes(parent, filter, pageSize, pageToken);

        // TODO: test validations
    }
    /**
     * Lists occurrences for the specified project.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOccurrencesTest() throws ApiException {
        String parent = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        V1beta1ListOccurrencesResponse response = api.listOccurrences(parent, filter, pageSize, pageToken);

        // TODO: test validations
    }
    /**
     * Updates the specified note.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNoteTest() throws ApiException {
        V1beta1Note body = null;
        String name = null;
        V1beta1Note response = api.updateNote(body, name);

        // TODO: test validations
    }
    /**
     * Updates the specified occurrence.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateOccurrenceTest() throws ApiException {
        V1beta1Occurrence body = null;
        String name = null;
        V1beta1Occurrence response = api.updateOccurrence(body, name);

        // TODO: test validations
    }
}
